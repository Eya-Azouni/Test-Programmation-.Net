// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProgrammationConformit.Infrastructures;

namespace TestProgrammationConformit.Migrations
{
    [DbContext(typeof(ConformitContext))]
    [Migration("20210407191954_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TestProgrammationConformit.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateOfCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("004a4887-4011-44b8-940a-cbac81bade25"),
                            DateOfCreation = new DateTimeOffset(new DateTime(2021, 4, 7, 20, 19, 53, 812, DateTimeKind.Unspecified).AddTicks(8539), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Breath taking performance by Adele",
                            EventId = new Guid("99c36725-04ec-4336-815c-c6206ca40384")
                        },
                        new
                        {
                            Id = new Guid("10dfede3-a6dc-4e88-b191-66b9d3ed6fae"),
                            DateOfCreation = new DateTimeOffset(new DateTime(2021, 4, 7, 20, 19, 53, 814, DateTimeKind.Unspecified).AddTicks(8769), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Demi Lovato was just Amazing !!!",
                            EventId = new Guid("99c36725-04ec-4336-815c-c6206ca40384")
                        },
                        new
                        {
                            Id = new Guid("14f25238-fb47-4c3c-9962-7f051141bfd9"),
                            DateOfCreation = new DateTimeOffset(new DateTime(2021, 4, 7, 20, 19, 53, 814, DateTimeKind.Unspecified).AddTicks(8842), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = " The choice is so hard this time ! everybody deserve to win !",
                            EventId = new Guid("fc8fde5a-d62e-41d0-a740-372c31cdeb5c")
                        });
                });

            modelBuilder.Entity("TestProgrammationConformit.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("InvolvedPerson")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99c36725-04ec-4336-815c-c6206ca40384"),
                            Description = "On Sunday, March 14, 2021, the 63rd GRAMMY Awards will be happening.",
                            InvolvedPerson = "John Legend",
                            Title = "Grammys 2021"
                        },
                        new
                        {
                            Id = new Guid("fc8fde5a-d62e-41d0-a740-372c31cdeb5c"),
                            Description = "The 93rd Academy Awards ceremony, presented by the Academy of Motion Picture Arts and Sciences (AMPAS), will honor the best films released between January 1, 2020, and February 28, 2021.",
                            InvolvedPerson = "Ashley Fox",
                            Title = "Oscars 2021"
                        });
                });

            modelBuilder.Entity("TestProgrammationConformit.Entities.Comment", b =>
                {
                    b.HasOne("TestProgrammationConformit.Entities.Event", "Event")
                        .WithMany("Comments")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("TestProgrammationConformit.Entities.Event", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
